version: "3.2"

services:
  postgres:
    ports:
      - "5434:5432"

  minio:
    image: minio/minio
    volumes:
      - minio:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: minio
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbucket:
    image: minio/mc
    env_file:
      - .env
    depends_on:
      - minio
    # Add the desired bucket, and set its policy to public
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minio ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb myminio/${S3_BUCKET_NAME};
      /usr/bin/mc anonymous set public myminio/${S3_BUCKET_NAME};
      exit 0;
      "

  web:
    build:
      context: .
    depends_on:
      - postgres
      - minio
    environment:
      ENV: ${ENV:-development}
      FLASK_DEBUG: 1
      SQLALCHEMY_WARN_20: 1
    volumes:
      - ./poetry.lock:/usr/src/app/poetry.lock
      - ./pyproject.toml:/usr/src/app/pyproject.toml
      - ./OpenOversight:/usr/src/app/OpenOversight
      - oo-assets:/usr/src/app/OpenOversight/app/static/dist
    ports:
      - "3000:3000"

volumes:
  minio:
  # Prevent bind mount from overwriting assets: https://stackoverflow.com/q/57065750
  oo-assets:
