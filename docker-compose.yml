version: "3"

services:
 postgres:
   restart: always
   image: postgres:13
   env_file:
     - .env
   environment:
     POSTGRES_USER: openoversight
     POSTGRES_DB: openoversight
   volumes:
     - postgres:/var/lib/postgresql/data

 minio:
   image: minio/minio
   volumes:
     - minio:/data
   ports:
     - "9000:9000"
   env_file:
     - .env
   environment:
     MINIO_ROOT_USER: minio
   command: server /data
   healthcheck:
     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
     interval: 30s
     timeout: 20s
     retries: 3

 createbucket:
   image: minio/mc
   env_file:
     - .env
   depends_on:
     - minio
   # Add the desired bucket, and set its policy to public
   entrypoint: >
     /bin/sh -c "
     /usr/bin/mc config host add myminio http://minio:9000 minio ${MINIO_ROOT_PASSWORD};
     /usr/bin/mc mb myminio/${S3_BUCKET_NAME};
     /usr/bin/mc policy set public myminio/${S3_BUCKET_NAME};
     exit 0;
     "

 web:
   restart: always
   build:
      context: .
      dockerfile: ./dockerfiles/web/Dockerfile
   env_file:
     - .env
   environment:
     FLASK_APP: app
     FLASK_ENV: "${FLASK_ENV:-development}"
   links:
     - postgres:postgres
   volumes:
     - ./data:/data/
     - ./OpenOversight:/usr/src/app/OpenOversight
   command: scripts/entrypoint.sh
   ports:
     - "3000:3000"

volumes:
  postgres:
  minio:
